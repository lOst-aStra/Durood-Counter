# The proguard configuration file for the following section is C:\Users\Aslam\Desktop\DuroodCounter\app\build\intermediates\aapt_proguard_file\release\processReleaseResources\aapt_rules.txt
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.lostastra.duroodcounter.MainActivity { <init>(); }

# End of content from C:\Users\Aslam\Desktop\DuroodCounter\app\build\intermediates\aapt_proguard_file\release\processReleaseResources\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\Aslam\Desktop\DuroodCounter\app\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.6.0
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from C:\Users\Aslam\Desktop\DuroodCounter\app\build\intermediates\default_proguard_files\global\proguard-android-optimize.txt-8.6.0
# The proguard configuration file for the following section is C:\Users\Aslam\Desktop\DuroodCounter\app\proguard-rules.pro
# ProGuard rules for release builds. Keep default optimized rules.
# Add specific rules as needed in future stories.

# End of content from C:\Users\Aslam\Desktop\DuroodCounter\app\proguard-rules.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\a2e1c52e1ec1fc8c5d84c89f46d40277\transformed\animation-core-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\a2e1c52e1ec1fc8c5d84c89f46d40277\transformed\animation-core-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\62fca5fb9e48e2e7b238f7a59ad3e203\transformed\material-ripple-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\62fca5fb9e48e2e7b238f7a59ad3e203\transformed\material-ripple-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\30cc0ed4789ba3138aab83d489ae3eb5\transformed\animation-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\30cc0ed4789ba3138aab83d489ae3eb5\transformed\animation-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\2957399e0d758bd15a6ec809fc94e0b5\transformed\foundation-layout-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\2957399e0d758bd15a6ec809fc94e0b5\transformed\foundation-layout-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\1e6b37fc1a7ba37ac3fca21d848c9f24\transformed\foundation-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
}


# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\1e6b37fc1a7ba37ac3fca21d848c9f24\transformed\foundation-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\41284d9ee5943fc26c56085b6d4067cb\transformed\ui-unit-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\41284d9ee5943fc26c56085b6d4067cb\transformed\ui-unit-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\59d5080ca91d4f3872f33a6b12cab64e\transformed\ui-graphics-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\59d5080ca91d4f3872f33a6b12cab64e\transformed\ui-graphics-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\7b864a19f2ccefc593be604577432efc\transformed\ui-geometry-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\7b864a19f2ccefc593be604577432efc\transformed\ui-geometry-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\fcb3603d676b0fc4db06b22749a28fc3\transformed\ui-util-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\fcb3603d676b0fc4db06b22749a28fc3\transformed\ui-util-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\1e1d967cf46d10c4e80f32bd552172a4\transformed\ui-text-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\1e1d967cf46d10c4e80f32bd552172a4\transformed\ui-text-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\9a94ca8a406c40b548a567a3c24946bc\transformed\ui-tooling-preview-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\9a94ca8a406c40b548a567a3c24946bc\transformed\ui-tooling-preview-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\fd6bfb6121899b803fc08c8367816b22\transformed\savedstate-1.2.1\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\fd6bfb6121899b803fc08c8367816b22\transformed\savedstate-1.2.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\ab357b1f35a8d9f8df8463a97f14d62d\transformed\graphics-path-1.0.1\proguard.txt
-keepclasseswithmembers class androidx.graphics.path.** {
    native <methods>;
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\ab357b1f35a8d9f8df8463a97f14d62d\transformed\graphics-path-1.0.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\9ad209ebfd9137aa424fc24b918f3a45\transformed\core-1.13.1\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\9ad209ebfd9137aa424fc24b918f3a45\transformed\core-1.13.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\c654622731181aa25d23c3cc727dfc27\transformed\lifecycle-process-2.8.7\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\c654622731181aa25d23c3cc727dfc27\transformed\lifecycle-process-2.8.7\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\04fe27f7419b5d472a12d8df54102696\transformed\lifecycle-runtime-release\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# The deprecated `android.app.Fragment` creates `Fragment` instances using reflection.
# See: b/338958225, b/341537875
-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\04fe27f7419b5d472a12d8df54102696\transformed\lifecycle-runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\d353ff738ca14702cc15129007e85681\transformed\lifecycle-viewmodel-savedstate-2.8.7\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\d353ff738ca14702cc15129007e85681\transformed\lifecycle-viewmodel-savedstate-2.8.7\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\46ec533d3808675b30f5fce8d8c716e2\transformed\lifecycle-viewmodel-release\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\46ec533d3808675b30f5fce8d8c716e2\transformed\lifecycle-viewmodel-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\331fca3b71f65658f2278053b00c467c\transformed\lifecycle-runtime-compose-release\proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.lifecycle.compose.LocalLifecycleOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalLifecycleOwner` to ensure backward compatibility
# when using Lifecycle 2.8+ with Compose 1.6.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\331fca3b71f65658f2278053b00c467c\transformed\lifecycle-runtime-compose-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\51c93cd93dbce13771cd2a6c8124f8e6\transformed\ui-release\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas
-dontwarn android.view.HardwareCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);
}

# When pointer input modifier nodes are added dynamically and have the same keys (common when
# developers `Unit` for their keys), we need a way to differentiate them and using a
# functional interface and comparing classes allows us to do that.
-keepnames class androidx.compose.ui.input.pointer.PointerInputEventHandler {
    *;
}


# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\51c93cd93dbce13771cd2a6c8124f8e6\transformed\ui-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\8b93115838f899789347db4d18f54321\transformed\rules\lib\META-INF\proguard\androidx.datastore_datastore-preferences-core.pro
-keepclassmembers class * extends androidx.datastore.preferences.protobuf.GeneratedMessageLite {
    <fields>;
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\8b93115838f899789347db4d18f54321\transformed\rules\lib\META-INF\proguard\androidx.datastore_datastore-preferences-core.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\f14789bf6b399c6cec5ee86897d8054c\transformed\runtime-saveable-release\proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\f14789bf6b399c6cec5ee86897d8054c\transformed\runtime-saveable-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\848d4d8b476ddb214d71b6dc0fc17d44\transformed\runtime-release\proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# Composer's class initializer doesn't do anything but create an EMPTY object. Marking the
# initializers as having no side effects can help encourage shrinkers to merge/devirtualize Composer
# with ComposerImpl.
-assumenosideeffects public class androidx.compose.runtime.Composer {
    void <clinit>();
}
-assumenosideeffects public class androidx.compose.runtime.ComposerImpl {
    void <clinit>();
}

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.runtime.** {
    # java.lang.Void == methods that return Nothing
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);

    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);

    static void compose*RuntimeError(...);
    static java.lang.Void compose*RuntimeError(...);
}


# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\848d4d8b476ddb214d71b6dc0fc17d44\transformed\runtime-release\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\92c002c36b126eb2ea0429bc0bc369bd\transformed\rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\92c002c36b126eb2ea0429bc0bc369bd\transformed\rules\lib\META-INF\com.android.tools\r8\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\5b72be69245ab33cd1fa9e7bc5fdcb30\transformed\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\5b72be69245ab33cd1fa9e7bc5fdcb30\transformed\rules\lib\META-INF\com.android.tools\r8-from-1.6.0\coroutines.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\510435412084884513854e53287ee27b\transformed\rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\510435412084884513854e53287ee27b\transformed\rules\lib\META-INF\proguard\androidx-collection-collection-ktx.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\a057c243bb944efc5b6b52e8d9aa7f90\transformed\versionedparcelable-1.1.1\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\a057c243bb944efc5b6b52e8d9aa7f90\transformed\versionedparcelable-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\42b5a7cb3845c9b0f677f60f54e839f9\transformed\startup-runtime-1.1.1\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\42b5a7cb3845c9b0f677f60f54e839f9\transformed\startup-runtime-1.1.1\proguard.txt
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\aaf3de183c4e4b06a47091d3aa6b5b0c\transformed\rules\lib\META-INF\proguard\androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\aaf3de183c4e4b06a47091d3aa6b5b0c\transformed\rules\lib\META-INF\proguard\androidx-annotations.pro
# The proguard configuration file for the following section is C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\ae12e19692dbfa5e94fdf1d8a2274791\transformed\rules\lib\META-INF\proguard\okio.pro
# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# End of content from C:\Users\Aslam\.gradle\caches\9.0-milestone-1\transforms\ae12e19692dbfa5e94fdf1d8a2274791\transformed\rules\lib\META-INF\proguard\okio.pro
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>